a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font:inherit;vertical-align:baseline}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:none}table{border-collapse:collapse;border-spacing:0}@font-face{font-family:"Druk Wide";src:local("Druk Wide"),local("Druk-Wide-Bold"),url(../font/Druk-Wide-Bold.eot?#iefix) format("embedded-opentype"),url(..//font/Druk-Wide-Bold.woff) format("woff"),url(../font/Druk-Wide-Bold.woff2) format("woff2");font-weight:500;font-style:normal}body,html{background:#f2f2f2;font-family:"Montserrat";overflow-x:hidden}.container{max-width:1187px;margin:0 auto;padding-bottom:100px;display:-webkit-box;display:-ms-flexbox;display:flex}button{background:0 0;margin:0;padding:0;border:0}.sidebar{background:#fff;width:234px;border-radius:0 0 10px 10px}.sidebar .sidebar__body{padding:47px 0 0;-webkit-box-shadow:2.000007391px 4.000014782px 18.0000667572px 0 rgba(30,27,26,.07);box-shadow:2.000007391px 4.000014782px 18.0000667572px 0 rgba(30,27,26,.07);border-radius:0 0 10px 10px}.sidebar .sidebar__body .sidebar__filter{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:end;-ms-flex-align:end;align-items:end;padding:0 30px}.sidebar .sidebar__body .sidebar__filter .filter__title{font:500 22px "Druk Wide"}.sidebar .sidebar__body .sidebar__filter .filter__clear .filter__btn{background:0 0;padding:4px 10px;border:solid 1px orange;border-radius:5px;color:orange;font-size:9px;cursor:pointer}.sidebar .sidebar__body .sidebar__filter .filter__clear .filter__btn:hover{opacity:.5}.sidebar .sidebar__body .filter{padding-bottom:16px}.witget__container{padding:24px 0;border-bottom:solid 2px #f2f2f2}.witget__container_body{padding:0 30px}.witget__color{background:#f4f4f4}.title__widget{font:700 11px "Montserrat";text-transform:uppercase;color:#2c2929;padding:0 0 20px}.sidebar__choosed .choosed__btn{width:100%;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;gap:8px 4px;cursor:pointer}.sidebar__choosed .choosed__btn .choosed__btn_item{background:#2c2929;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;gap:9px;padding:7px 10px;width:-webkit-fit-content;width:-moz-fit-content;width:fit-content;border-radius:30px;cursor:pointer}.sidebar__choosed .choosed__btn .btn__name{font:600 9px "Montserrat";color:#fff;cursor:pointer}.sidebar__choosed .choosed__btn .btn__close{content:"";position:relative;width:7px;height:7px;cursor:pointer}.sidebar__choosed .choosed__btn .btn__close:hover{-webkit-transform:rotate(180deg);-ms-transform:rotate(180deg);transform:rotate(180deg);-webkit-transition:.5s;-o-transition:.5s;transition:.5s}.sidebar__choosed .choosed__btn .btn__close ::after,.sidebar__choosed .choosed__btn .btn__close ::before{content:"";position:absolute;top:3px;width:100%;height:1px;background:#fff;-webkit-transform:rotate(45deg);-ms-transform:rotate(45deg);transform:rotate(45deg)}.sidebar__choosed .choosed__btn .btn__close ::after{-webkit-transform:rotate(-45deg);-ms-transform:rotate(-45deg);transform:rotate(-45deg)}input::-webkit-inner-spin-button,input::-webkit-outer-spin-button{-webkit-appearance:none;margin:0}input[type=number]{-moz-appearance:textfield}.filter-price__inputs,.filter-price__lable{display:-webkit-box;display:-ms-flexbox;display:flex}.filter-price__inputs{gap:12px}.filter-price__lable{width:58px;height:29px;-webkit-box-align:center;-ms-flex-align:center;align-items:center;background:#ebebeb;border:solid 1px #ebebeb;border-radius:5px}.filter-price__lable input{font:500 10px "Montserrat";background:0 0;width:50%}.filter-price__lable input:focus{outline:0;outline-offset:0}.filter-price__slider{margin:23px 0}.filter-price__text{font:500 10px "Montserrat";padding-left:18px}.filter-price__input{border:0}.filter-price__lable input::-webkit-input-placeholder{font:500 10px "Montserrat"}.filter-price__lable input::-moz-placeholder{font:500 10px "Montserrat"}.filter-price__lable input:-ms-input-placeholder{font:500 10px "Montserrat"}.filter-price__lable input::-ms-input-placeholder{font:500 10px "Montserrat"}.filter-price__lable input::placeholder{font:500 10px "Montserrat"}.filter-price__lable.form__active{background:#ebebeb;border:solid 1px red}.noUi-horizontal .noUi-handle,.noUi-target{-webkit-box-shadow:none!important;box-shadow:none!important}.noUi-target{background:#cdcdcd!important;border:0!important;height:2px!important}.noUi-connect{background:red!important}.noUi-horizontal .noUi-handle{background:#fff!important;width:13px!important;height:13px!important;border-radius:100%!important;border:red solid 4px!important;top:-6px!important;right:-11px!important;cursor:pointer!important}.noUi-handle::after,.noUi-handle::before{display:none!important}.noUi-horizontal .noUi-handle-upper{right:0}.sidebar__gender .gender__list .gender__items{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:20px 0}.sidebar__gender .gender__list .gender__items .gender__item .gender__option,.sidebar__peculiarities .peculiarities__list .peculiarities__items .peculiarities__item .peculiarities__option{font:600 11px "Montserrat";text-decoration:none;color:#acacac;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;cursor:pointer}.sidebar__gender .gender__list .gender__items .gender__item .gender__option .option__check{display:none}.option__checkbox{background:#e9e9e9;display:block;width:13px;height:14px;border:solid 1px #e9e9e9;border-radius:1px;position:relative}.option__checkbox::before{content:"";position:absolute;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);-ms-transform:translate(-50%,-50%);transform:translate(-50%,-50%);display:block;width:8px;height:8px;background:url(../img/Check.png);opacity:0;-webkit-transition:.2s;-o-transition:.2s;transition:.2s}.color__select:checked+.color__checkbox::before,.option__check:checked+.option__checkbox::before{opacity:1}.color__container,.sidebar__peculiarities .peculiarities__list .peculiarities__items{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:26px}.sidebar__peculiarities .peculiarities__list .peculiarities__items .peculiarities__item .peculiarities__option .option__check{-webkit-appearance:none;-moz-appearance:none;appearance:none;z-index:99}.color__container{width:100%;-webkit-box-orient:horizontal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;gap:3px}.color__item{position:relative;cursor:pointer}.color__select{-webkit-appearance:none;-moz-appearance:none;appearance:none;position:absolute}.color__checkbox,.color__checkbox::before{position:absolute;top:6px;left:7px;display:block;width:17px;height:17px}.color__checkbox::before{content:"";left:4px;background:url(../img/Check-white.png) no-repeat;opacity:0}.tabs-wrapper{width:100%}.nav-tabs{gap:4px}.nav-tabs li{border:1px solid #ddd}.nav-tabs,.nav-tabs .nav-item{display:-webkit-box;display:-ms-flexbox;display:flex}.tab,.tab.is-active{font:500 10px "Montserrat";border-radius:5px}.tab{cursor:pointer;color:#2c2929;width:44px;height:24px}.tab.is-active{background:#2c2929;color:#fff}.tab__flex{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.tab-panel{display:none}.tab-panel.is-active{display:block}.size__item .size__btn{background:#4060ff;padding:10px 20px;font-size:14px;cursor:pointer}.size__item .size__btn:active{background:red}.size__container{width:100%;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;gap:3px;padding-top:16px}.size__select{font:500 9.5px "Montserrat";width:26px;height:19px;background:#e7e7e7;border-radius:4px;cursor:pointer;-webkit-transition:.5s;-o-transition:.5s;transition:.5s}.size__select:active,.size__select:hover{background:orange;-webkit-transition:.5s;-o-transition:.5s;transition:.5s;color:#fff}.sidebar__sale .sale__btn{display:-webkit-box;display:-ms-flexbox;display:flex;gap:9px}.sidebar__sale .sale__btn .novelties__btn,.sidebar__sale .sale__btn .sale__btn{font:600 12px "Montserrat";border:solid 1px orange;border-radius:5px;cursor:pointer}.sidebar__sale .sale__btn .novelties__btn{background:orange;color:#fff;padding:9px 13px}.sidebar__sale .sale__btn .novelties__btn:hover{border:solid 1px orange;background:0 0;color:orange;-webkit-transition:.5s;-o-transition:.5s;transition:.5s}.sidebar__sale .sale__btn .sale__btn{color:orange;padding:8px 12px}.sidebar__sale .sale__btn .sale__btn:hover{border:solid 1px orange;background:orange;color:#fff;-webkit-transition:.5s;-o-transition:.5s;transition:.5s}.witget__container_end{padding:25px 0}.shoping{width:933px;max-width:933px}.shoping__container{padding-top:30px;padding-left:17px;height:98%;position:relative}.shoping__filter{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-flow:row wrap;flex-flow:row wrap;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:end;-webkit-box-align:end;-ms-flex-align:end;align-items:end}.shoping__filter__title{width:100%;color:#fff;margin-bottom:25px;font-weight:400;text-align:center}.shoping__filter .select-dropdown{position:relative;max-width:100%}.shoping__filter .select-dropdown__button{background:#fff;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;padding:13px 16px;color:#616161;border:1px solid red;border-radius:6px;cursor:pointer;width:167px;max-width:167px;text-align:left}.shoping__filter .select-dropdown__button::focus{outline:0}.shoping__filter .select-dropdown__button .zmdi-chevron-down{position:absolute;right:10px;top:12px}.shoping__filter .select-dropdown__list,.shoping__filter .select-dropdown__list-item{list-style:none;display:block;-webkit-transition:all ease-in-out .3s;-o-transition:all ease-in-out .3s;transition:all ease-in-out .3s}.shoping__filter .select-dropdown__list{position:absolute;left:0;right:0;max-height:300px;overflow:auto;margin:0;padding:0;opacity:0;pointer-events:none;-webkit-transform-origin:top left;-ms-transform-origin:top left;transform-origin:top left;-webkit-transform:scale(1,0);-ms-transform:scale(1,0);transform:scale(1,0);z-index:2}.shoping__filter .select-dropdown__list.active{opacity:1;pointer-events:auto;-webkit-transform:scale(1,1);-ms-transform:scale(1,1);transform:scale(1,1);border:1px solid red;border-radius:6px;margin-top:10px}.shoping__filter .select-dropdown__list-item{font:600 13px "Montserrat";padding:10px 15px;background:#fff;cursor:pointer;color:#bdbdbd}.shoping__filter .select-dropdown__list-item:hover{font:600 13px "Montserrat";color:#29282d}.shoping__filter .select__name{font:600 13px "Montserrat"}.shoping__filter .select-dropdown__button::after{content:url(../img/drop__down.png)}.shoping__product{width:100%;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;gap:18px 12px;padding:21px 0 0}.shoping__product .product__item{width:220px;max-width:220px;border-radius:10px;-webkit-box-shadow:1.6477556229px 3.2955112457px 14.8298006058px 0 rgba(30,27,26,.07);box-shadow:1.6477556229px 3.2955112457px 14.8298006058px 0 rgba(30,27,26,.07);cursor:pointer}.product__item:hover .product__header{background:#cac8c8;-webkit-transition:.5s;-o-transition:.5s;transition:.5s}.product__item:hover .product__header-container,.shoping__product .product__item{background:#fff;-webkit-transition:.5s;-o-transition:.5s;transition:.5s}.product__item:hover .product__body,.product__item:hover .product__footer{background:#cac8c8;-webkit-transition:.5s;-o-transition:.5s;transition:.5s}.product__header,.product__header-container{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-ms-flex-line-pack:stretch;align-content:stretch}.product__header{height:222px;width:220px;background:#fff;border-radius:10px 10px 0 0}.product__header-container{width:192px;height:192px;background:#f2f2f2;border-radius:8px}.product__body-container{width:192px;margin:0 auto}.product__body-container .product__title .product__name{font:600 13px "Montserrat";color:#797776;text-transform:uppercase}.product__body-container .product__price{padding:17px 0 19px}.product__body-container .product__price .product__value{font:700 16px "Montserrat";color:#21201f}.product__footer{padding-bottom:14px;border-radius:0 0 10px 10px}.product__footer .product__body-container .product__btn{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.product__footer .product__body-container .product__btn .product__viev{padding:13px 23px;border:1px solid #2c2929;border-radius:8px;cursor:pointer;-webkit-transition:.5s;-o-transition:.5s;transition:.5s}.product__footer .product__body-container .product__btn .product__viev:hover{background:orange;-webkit-transition:.5s;-o-transition:.5s;transition:.5s}.product__footer .product__body-container .product__btn .product__viev .product__btn-name{font:600 16px "Montserrat";color:#2c2929}.product__heart{height:auto}.product__heart_click{cursor:pointer;-webkit-transition:fill .3s;-o-transition:fill .3s;transition:fill .3s}.product__heart_click.filled{fill:red}.pagination,.pagination .current-page,.pagination .dots{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.pagination{margin-top:30px;gap:0 11px;position:absolute;bottom:0}.pagination li{list-style:none;display:none}.pagination .current-page,.pagination .dots{width:33px;height:34px;background:#e3e3e3;border-radius:6px;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.pagination .current-page.active,.pagination .current-page:hover{background:orange}.pagination .current-page .page-link{font:600 12px "Montserrat";color:#575554;text-decoration:none;padding:9px 11px}.pagination .current-page .page-link.active,.pagination .current-page .page-link:hover,.pagination .dots .page-link:hover{color:#fff}.pagination .dots:hover{background:orange}.pagination .dots .page-link{font:600 12px "Montserrat";color:#575554;text-decoration:none;padding:9px 11px}@supports (-webkit-appearance:none){.option__checkbox::before{background:url(../img/Check.webp)}.color__checkbox::before{background:url(../img/Check-white.webp) no-repeat}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */